/**
 * DarlingX Web Server
 * –ì–∏–±—Ä–∏–¥–Ω—ã–π —Å–µ—Ä–≤–µ—Ä: API Backend + Static File Server
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–∞–π—Ç, –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–µ—Ä–≤–µ—Ä–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
 */

const express = require('express');
const path = require('path');
const cors = require('cors');
const helmet = require('helmet');
const compression = require('compression');
const morgan = require('morgan');
const rateLimit = require('express-rate-limit');
require('dotenv').config();

// –ò–º–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤
const quotesRoutes = require('./routes/quotes');
const authRoutes = require('./routes/auth');
const adminRoutes = require('./routes/admin');
const oracleRoutes = require('./routes/oracle');
const apiRoutes = require('./routes/api');

// –ò–º–ø–æ—Ä—Ç middleware
const { errorHandler } = require('./middleware/errorHandler');
const { logger } = require('./utils/logger');

const app = express();
const PORT = process.env.PORT || 3000;

// ========================================
// üîß MIDDLEWARE –ù–ê–°–¢–†–û–ô–ö–ò
// ========================================

// –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
app.use(helmet({
  contentSecurityPolicy: {
    directives: {
      defaultSrc: ["'self'"],
      styleSrc: ["'self'", "'unsafe-inline'"],
      fontSrc: ["'self'"],
      scriptSrc: ["'self'", "'unsafe-inline'"],
      imgSrc: ["'self'", "data:", "https:"],
      connectSrc: ["'self'", "ws:", "wss:"]
    }
  }
}));

// CORS –¥–ª—è API
app.use(cors({
  origin: process.env.CORS_ORIGIN?.split(',') || ['http://localhost:3000', 'https://darlingx.com'],
  credentials: true
}));

// –°–∂–∞—Ç–∏–µ –æ—Ç–≤–µ—Ç–æ–≤
app.use(compression());

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
app.use(morgan('combined', { stream: { write: message => logger.info(message.trim()) } }));

// Rate limiting –¥–ª—è API
const apiLimiter = rateLimit({
  windowMs: parseInt(process.env.RATE_LIMIT_WINDOW_MS) || 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
  max: parseInt(process.env.RATE_LIMIT_MAX_REQUESTS) || 100,
  message: {
    error: 'Too many requests from this IP, please try again later.'
  },
  standardHeaders: true,
  legacyHeaders: false
});

// –ü–∞—Ä—Å–∏–Ω–≥ JSON
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

// ========================================
// üìÅ –°–¢–ê–¢–ò–ß–ï–°–ö–ò–ï –§–ê–ô–õ–´ (–≤–∞—à —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–∞–π—Ç)
// ========================================

// –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã (HTML, CSS, JS, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
app.use(express.static(path.join(__dirname, '../'), {
  maxAge: process.env.NODE_ENV === 'production' ? '1y' : '0',
  etag: true,
  lastModified: true
}));

// ========================================
// üîó API –ú–ê–†–®–†–£–¢–´
// ========================================

// API rate limiting
app.use('/api', apiLimiter);

// API –º–∞—Ä—à—Ä—É—Ç—ã
app.use('/api/quotes', quotesRoutes);
app.use('/api/auth', authRoutes);
app.use('/api/admin', adminRoutes);
app.use('/api/oracle', oracleRoutes);
app.use('/api', apiRoutes);

// ========================================
// üåê SPA FALLBACK (–¥–ª—è —á–∏—Å—Ç—ã—Ö URL)
// ========================================

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–∏—Å—Ç—ã—Ö URL –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
const spaRoutes = [
  '/books', '/book-details', '/posts', '/projects', '/lists', 
  '/cv', '/open-questions', '/quotes', '/project-detail', 
  '/my-time', '/offline', '/register'
];

spaRoutes.forEach(route => {
  app.get(route, (req, res) => {
    const htmlFile = route.substring(1) + '.html';
    res.sendFile(path.join(__dirname, '../', htmlFile));
  });
});

// Fallback –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º index.html
app.get('*', (req, res) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
  const filePath = path.join(__dirname, '../', req.path);
  if (require('fs').existsSync(filePath) && require('fs').statSync(filePath).isFile()) {
    res.sendFile(filePath);
  } else {
    // SPA fallback
    res.sendFile(path.join(__dirname, '../index.html'));
  }
});

// ========================================
// üõ†Ô∏è –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö
// ========================================

app.use(errorHandler);

// ========================================
// üöÄ –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê
// ========================================

app.listen(PORT, () => {
  logger.info(`üöÄ DarlingX Server –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  logger.info(`üìÅ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã: ${path.join(__dirname, '../')}`);
  logger.info(`üîó API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}/api`);
  logger.info(`üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}`);
  
  if (process.env.NODE_ENV === 'development') {
    logger.info(`üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∞–∫—Ç–∏–≤–µ–Ω`);
  }
});

// Graceful shutdown
process.on('SIGTERM', () => {
  logger.info('SIGTERM –ø–æ–ª—É—á–µ–Ω, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞...');
  process.exit(0);
});

process.on('SIGINT', () => {
  logger.info('SIGINT –ø–æ–ª—É—á–µ–Ω, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞...');
  process.exit(0);
});

module.exports = app; 